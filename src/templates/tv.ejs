<%- include('header'); -%>

<div class="container p-5">
  <div id="movie-details" class="d-flex">
    <div class="image-poster">
      <img src="https://image.tmdb.org/t/p/w440_and_h660_face<%= tv.poster_path %>" alt="poster">
    </div>
    <div class="px-3">
      <h1 class="title"><%= tv.name %></h1>
      <p class="overview">
        <%= tv.overview %>
      </p>
      <div class="mb-3">
        <a class="btn btn-primary btn-lg" data-focusable="1" href="">
          <i class="bi bi-play-fill"></i>
          Continue Watching
        </a>
      </div>
      <ul id="tv-show-seasons-list">
        <% for (var i = 1; i <= tv.number_of_seasons; i++) { %>
        <li>
          <button tabindex="-1" data-focusable="2" onclick="selectSeason(<%= i %>)">Season <%= i %></button>
        </li>
        <% } %>
      </ul>
    </div>
  </div>
  
</div>
<div id="season-episode-container">
  <h2>Episodes</h2>
  <div id="season-episode">

  </div>
</div>

<template id="season-episode-template">
  <a class="m-2 episode" href="" data-focusable="3">
    <img src="" class="card-img">
    <div class="episode-watched">
      <i class="bi bi-eye-fill" style="color: white; font-size: 60px;"></i>
    </div>
  </a>

</template>

<script>
  let currentElement = null;
  let currentLevel = 0;
  let currentIndex = 0;
  document.addEventListener('keydown', function(e) {
    
    const focusableElements = Array.from(document.querySelectorAll('[data-focusable]'));
    const maxLevel = focusableElements.map(e => e.getAttribute('data-focusable')).reduce((a, b) => Math.max(a, b), 1);
    switch(e.keyCode) {
      case 10009:
        e.preventDefault();
        window.location.href = '/';
        break;
      case 40: // Down
        e.preventDefault();
        currentLevel = (currentLevel + 1) % (maxLevel + 1);
        currentIndex = 0;
        break;
      case 39: // Right
        e.preventDefault();
        currentIndex += 1;
        break;
      case 38: // Up
        e.preventDefault();
        currentLevel = (currentLevel - 1 + (maxLevel + 1)) % (maxLevel + 1);
        currentIndex = 0;
        break;
      case 37: // Left
        e.preventDefault();
        if (currentIndex > 0) {
          currentIndex -= 1;
        }
        break;
    }

    const levelFocusableElements = Array.from(document.querySelectorAll(`[data-focusable="${currentLevel}"]`));
    if (levelFocusableElements.length > 0) {
      currentIndex = currentIndex % levelFocusableElements.length;
      levelFocusableElements[currentIndex].focus();
    }
  });

  function showEpisodes(episodes) {
    document.getElementById('season-episode').innerHTML = '';
    const template = document.getElementById('season-episode-template');
    const episodesContainer = document.createDocumentFragment();
    episodes.forEach(episode => {
      if (episode.data.still_path) {
        const episodeElement = template.content.cloneNode(true);
        const imgElement = episodeElement.querySelector('img');
        imgElement.src = `https://image.tmdb.org/t/p/w440_and_h660_face${episode.data.still_path}`;
        const aElement = episodeElement.querySelector('a');
        aElement.href = `/tv/<%= tv.id %>/s/${episode.season}/e/${episode.data.episode_number}`;
        episodeElement.querySelector('.episode-watched').style.display = episode.watched ? 'flex' : 'none';
        episodesContainer.appendChild(episodeElement);
      }
    });
    document.getElementById('season-episode-container').style.top = '400px';
    document.getElementById('season-episode').appendChild(episodesContainer);
  }

  function selectSeason(season) {
    document.getElementById('season-episode-container').style.top = '700px';
    fetch(`/tv/<%= tv.id %>/s/${season}`)
      .then(response => response.json())
      .then(data => {
        showEpisodes(data);
      });
  }
</script>

<%- include('footer'); -%>